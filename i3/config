# vim: foldmethod=marker

### Appearance ###{{{

## Wallpaper ## {{{

#set $wall_set feh --bg-fill ~/Desktop/walls/wall2.jpg

set $wall_set wal -e -s -i ~/Desktop/walls/wall.jpg
# pywal will set the wallpaper and change the colors only for
# rofi and some other things

#}}}
## Borders ## {{{

# Border style <normal|1pixel|pixel <px>|none|pixel>
default_border none
default_floating_border none

# Hide edge_borders
hide_edge_borders none

# Change border style <normal|pixel <px>|none|toggle>
bindsym $mod+u border toggle

#}}}
## Gaps ## {{{

gaps inner 10
gaps outer -4

bindsym $mod+Shift+0 gaps inner current set 0 , gaps outer current set 0
bindsym $mod+Shift+9 gaps inner current set 10 , gaps outer current set -4

#gaps used if only more than one container on the workspace
smart_gaps on

# Gaps Mode
set $mode_gaps Gaps: (o) outer, (i) inner, (r) reset current, (R) reset all, (0) Zero gaps current
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

bindsym $mod+Shift+v mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym r gaps inner current set 10 , gaps outer current set -4 , mode "default"
        bindsym Shift+r gaps inner all set 10 , gaps outer all set -4 , mode "default"
        bindsym 0 gaps inner current set 0 , gaps outer current set 0 , mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#}}}
## Color Variables ##{{{

# Slightly modified Arc theme colors
set $arc_blue #5294E2
set $arc_dark_blue #2f343f
set $arc_darker_blue #181b21
set $arc_white #ededed
set $arc_grey #777777
set $arc_red #cc575d

#}}}
## Window Decorations ##{{{

# class                   border             backgr.            text         indic.   child_border
  client.focused          $arc_dark_blue     $arc_dark_blue     $arc_white
  client.focused_inactive $arc_darker_blue   $arc_darker_blue   $arc_grey
  client.unfocused        $arc_darker_blue   $arc_darker_blue   $arc_grey
  client.urgent           $arc_red           $arc_red           $arc_white
  client.placeholder      #000000 #0c0c0c #ffffff #000000 

  client.background       #2B2C2B

#}}}
## Pywal Color Scheme ##{{{

# set_from_resource $fg i3wm.color8 #f0f0f0
# set_from_resource $bg i3wm.color0 #f0f0f0
# set_from_resource $c2 i3wm.color2 #f0f0f0
# set_from_resource $c7 i3wm.color7 #f0f0f0
#
# # class                 border  backgr. text indicator child_border
# client.focused          $bg     $bg     $fg  $c7       $c2
# client.focused_inactive $bg     $bg     $fg  $c7       $c2
# client.unfocused        $bg     $bg     $fg  $c7       $c2
# client.urgent           $bg     $bg     $fg  $c7       $bg
# client.placeholder      $bg     $bg     $fg  $c7       $bg
#
# client.background       $bg

#}}}

#}}}

### Application Launcher Key Bindings ###{{{

bindsym $mod+Return exec st
bindsym $mod+b exec st -e "ranger"
bindsym $mod+Ctrl+b exec terminal -e 'bmenu'
bindsym $mod+d exec "rofi -show run -lines 3 -padding 25"
# Desktop application launcher
bindsym $mod+Shift+d exec --no-startup-id "rofi -show drun"
bindsym $mod+i exec --no-startup-id "qutebrowser"
# PD
bindsym $mod+p exec st -e "pd"
# window swticher using rofi
bindsym $mod+v exec --no-startup-id "rofi -show window -width 70"

#}}}

### Window Management ###{{{

## Window focus ##{{{

focus_follows_mouse no
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

#}}}
## Window resize ##{{{

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        bindsym Shift+h resize shrink width 10 px or 10 ppt
        bindsym Shift+j resize grow height 10 px or 10 ppt
        bindsym Shift+k resize shrink height 10 px or 10 ppt
        bindsym Shift+l resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#}}}
## Workspace ##{{{

# Workspace names
#set $ws2 2:ï‚¬
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $wsq q

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+q workspace $wsq

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+q move container to workspace $wsq

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+q move container to workspace $wsq; workspace $wsq

workspace_auto_back_and_forth no
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth; workspace back_and_forth

#navigate workspaces next / previous
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Ctrl+h workspace prev

#}}}
## Containter ##{{{

# split orientation
bindsym $mod+m split h
bindsym $mod+n split v

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
# bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#}}}
## Custom Window Classes ##{{{

# Open specific applications in floating mode
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="Calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lightdm-gtk-greeter-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Manjaro-hello"] floating enable
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [title="About Pale Moon"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Thus"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable
#}}}

#}}}

### Dual Monitor Settings ###{{{

## Mode - Move to Monitor ##{{{
set $mode_monitor_move Use h,j,k,l keys to move the workspace to another monitor
bindsym $mod+a mode "$mode_monitor_move"
mode "$mode_monitor_move"{
    bindsym h move workspace to output left
    bindsym j move workspace to output down
    bindsym k move workspace to output up
    bindsym l move workspace to output right

    bindsym Shift+h move container to output left
    bindsym Shift+j move container to output down
    bindsym Shift+k move container to output up
    bindsym Shift+l move container to output right
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
#}}}
## Monitor Positon Key Bindings ##{{{
# the keybindings mod+Shift+t/y change the monitor position and then write to file the same command
# it used to set the the respective position of the monitor. That command is then executed at startup
# I am sure most of the flags given to xrandr command are redundant but I am not aware of that atm
# It's just is what the arandr utility spit out

set $monitor_top "xrandr --output HDMI1 --mode 1280x1024 --pos 46x0 --rotate normal --output eDP1 --mode 1366x768 --pos 0x1024 --rotate normal"

set $monitor_right "xrandr --output HDMI1 --mode 1280x1024 --pos 1366x0 --rotate normal --output eDP1 --mode 1366x768 --pos 0x0 --rotate normal"

set $monitor_none "xrandr --output HDMI1 --off --output eDP1 --mode 1366x768 --pos 0x0 --rotate normal"

set $monitor_duplicate "xrandr --output eDP1 --primary --mode 1366x768 --scale 1x1 --output HDMI1 --same-as eDP1 --mode 1280x1024 --scale 0.75x0.75"

set $monitor_right_r_left "xrandr --output HDMI1 --mode 1280x1024 --pos 1370x768 --rotate left --output eDP1 --primary --mode 1366x768 --pos 0x1024 --rotate normal"

# sets the monitor to the top
bindsym $mod+Shift+t exec $monitor_top , exec $fehbg , exec echo $monitor_top > ~/.screenlayout/last_layout

# sets monitor to the right
bindsym $mod+Shift+y exec $monitor_right , exec $fehbg ,  exec echo $monitor_right > ~/.screenlayout/last_layout

# when there is no external monitor connected
bindsym $mod+Shift+g exec $monitor_none , exec $fehbg , exec echo $monitor_right > ~/.screenlayout/last_layout

# duplicate the laptop screen to an external monitor
bindsym $mod+Shift+f exec $monitor_duplicate , exec $fehbg , exec echo $monitor_duplicate > ~/.screenlayout/last_layout

# sets monitor to the left and rotates it to left
bindsym $mod+Ctrl+y exec --no-startup-id $monitor_right_r_left , exec $fehbg , exec echo $monitor_right_r_left > ~/.screenlayout/last_layout
#}}}

#}}}

### Autostart Applications/Scripts ###{{{

exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id compton -b
exec --no-startup-id nm-applet
exec --no-startup-id xfce4-power-manager
exec --no-startup-id clipit
exec --no-startup-id xautolock -time 10 -locker blurlock
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id fix_xcursor
# Configures the monitors according to the last set layout using xrandr
exec --no-startup-id ~/.screenlayout/last_layout
exec --no-startup-id $wall_set

#}}}

### Misc ### {{{
#Modifier Key
set $mod Mod4
# Use Mouse+$mod to drag floating windows
floating_modifier $mod

exec_always "killall flashfocus ; flashfocus"

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:Roboto 8

# kill focused window
bindsym $mod+o kill
bindsym $mod+Ctrl+o --release exec --no-startup-id xkill

# Screenshot
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s

exec --no-startup-id volumeicon
bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart


# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# }}}

### Status Bar ###{{{
# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
	i3bar_command i3bar
	status_command i3status
	position top

	tray_output primary
	tray_output eDP1

	bindsym button4 nop
	bindsym button5 nop
    font xft:Roboto 9
	strip_workspace_numbers yes

    colors {
        background $arc_darker_blue
        statusline #F9FAF9
        separator  #454947

#                          border,            backgr,           text
        focused_workspace  $arc_blue          $arc_blue         $arc_white
        active_workspace   #595B5B #353836 #FDF6E3
        inactive_workspace $arc_dark_blue     $arc_dark_blue    $arc_white 
        binding_mode       $arc_blue          $arc_dark_blue    $arc_white
        urgent_workspace   $arc_red           $arc_red          $arc_white 
    }
}

# hide/unhide i3status bar
bindsym $mod+Shift+m bar mode toggle

#}}}



